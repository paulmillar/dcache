#  -----------------------------------------------------------------------
#     Default values for macaroons
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

#  ---- Cell name of the macaroons service
#
macaroons.cell.name = macaroons

#  ---- Macaroon lifetime
#
#  If the value is non-zero then all macaroons will be minted with a caveat
#  that limits their validity to the specified duration from the current time.
#  If the value is zero then no such caveat is added.  In either case, subsequent
#  restrictions may be added.
#
macaroons.max-lifetime = 1
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)macaroons.max-lifetime.unit = DAYS

#  ---- Whether to export the macaroons cell as a well known cell
#
#  This property controls whether the macaroons cell is published as a
#  well known cell. Well known cells are addressable through their
#  cell name, while other cells are only addressable from other
#  domains using their fully qualified cell address.
#
(one-of?true|false)macaroons.cell.export = true

#  ---- Configuration for database connection pool
#
#  The database connection pool reuses connections between successive
#  database operations.  By reusing connections dCache doesn't suffer
#  the overhead of establishing new database connections for each
#  operation.
#
#  The options here determine how the macaroons service behaves as the
#  number of concurrent requests fluctuates.
#

#
#  The maximum number of concurrent database connections.
#
macaroons.db.connections.max = 30

#
#  The minimum number of idle database connections.
#
macaroons.db.connections.idle = 1


#  ---- Cell message processing parameters
#
#  Settings for the request processing thread pool.
#
#  The thread pool will stay at the minimum number of threads until the
#  maximum request queue length has been reached. At that point the number
#  of threads is increased up to the maximum, after which further requests
#  will be dropped. Idle threads are terminated after the idle time until
#  the number of threads drops back to the minimum.
#
#  Except for database operations, the macaroons service operates in
#  an asynchronous fashion. The minimum number of threads should be
#  chosen such that the database can be saturated under load. If
#  network latency between the macaroons and the database is high,
#  then the minimum number of threads could be increased to hide this
#  latency. The default setting is likely fine for most cases.
#
#  The maximum number of threads should be below the database connection
#  limit - otherwise threads end up blocking for idle connections and may
#  potentially deadlock in case the same thread needs more than one
#  connection (e.g. for nested transactions).
#
macaroons.cell.threads.min = 20
macaroons.cell.threads.max = 24
macaroons.cell.threads.max-idle-time = 60
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)macaroons.cell.threads.max-idle-time.unit = SECONDS
macaroons.cell.queue.max = 10000


#
# Database related settings reserved for internal use.
#
(immutable)macaroons.db.host = ${dcache.db.host}
(immutable)macaroons.db.name = macaroons
(immutable)macaroons.db.user = ${dcache.db.user}
(immutable)macaroons.db.password = ${dcache.db.password}
(immutable)macaroons.db.password.file = ${dcache.db.password.file}
macaroons.db.url=jdbc:postgresql://${macaroons.db.host}/${macaroons.db.name}?prepareThreshold=3
(immutable)macaroons.db.schema.changelog= org/dcache/macaroons/changelog/changelog-master.xml
macaroons.db.schema.auto=${dcache.db.schema.auto}



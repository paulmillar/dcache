#  -----------------------------------------------------------------------
#     Default values for nfs
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

nfs.cell.name=NFS-${host.name}

#  ---- Whether to export the nfs cell as a well known cell
#
#  This property controls whether the nfs cell is published as
#  a well known cell. Well known cells are addressable through their
#  cell name, while other cells are only addressable from other domains
#  using their fully qualified cell address.
nfs.cell.export=true

#
# NFS versions to support.
#
# Comma separated list of NFS versions to support,
# For example:
#  nfs.version=3, 4.1
#
(any-of?3|4.1)nfs.version=3

#
# TCP port number of NFS door
#
(forbidden)nfs.port = Use nfs.net.port
nfs.net.port = 2049

#
# The local NFSv4 domain name. An NFSv4  domain is a namespace
# with a unique username<->UID and groupname<->GID mapping.
#
nfs.domain=

#
# The username<->UID and groupname<->GID mapping results are cached to improve
# NFS interface performance. The following value allowes to tweak caching timeout.
#

# maximal number of entries in the cache
nfs.idmap.cache.size = 512

# cache entry maximal lifetime
nfs.idmap.cache.timeout = 30

# Time unit used for timeout.
#
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)\
nfs.idmap.cache.timeout.unit = SECONDS


# Allow legacy numeric strings instead of principals. Used for backward compatibility
# and for setups without mapping service like NIS or LDAP.
(one-of?true|false)nfs.idmap.legacy = true

#  ---- Mover queue
#
#   The mover queue on the pool to which this request will be
#   scheduled.
#
(forbidden)nfsIoQueue = Use nfs.mover.queue
nfs.mover.queue =

#
# enable RPCSEC_GSS
#
(one-of?true|false)nfs.rpcsec_gss = false

#
# Location of export file
#
nfs.export.file=/etc/exports

#
# Start embedded portmap service if system one not available.
#
(one-of?true|false)nfs.enable.portmap=true

# Whether space reservations are supported
(one-of?true|false)nfs.enable.space-reservation=${dcache.enable.space-reservation}

#  ---- Parameters related to talking to other services
#
nfs.service.loginbroker=${dcache.service.loginbroker}
nfs.service.loginbroker.update-period=${dcache.service.loginbroker.update-period}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)\
  nfs.service.loginbroker.update-period.unit=${dcache.service.loginbroker.update-period.unit}
nfs.service.loginbroker.update-threshold=${dcache.service.loginbroker.update-threshold}
(forbidden)nfs.published.name = Use nfs.service.loginbroker.family
nfs.service.loginbroker.family = file
nfs.service.loginbroker.version = nfs4.1

# Cell address of poolmanager service
nfs.service.poolmanager=${nfs.service.poolmanager-space-${nfs.enable.space-reservation}}
(immutable)nfs.service.poolmanager-space-false=${dcache.service.poolmanager}
(immutable)nfs.service.poolmanager-space-true=${dcache.service.spacemanager}
(forbidden)nfs.poolmanager.timeout = Use nfs.service.poolmanager.timeout
nfs.service.poolmanager.timeout = 300000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.service.poolmanager.timeout.unit=MILLISECONDS

nfs.service.pinmanager=${dcache.service.pinmanager}
nfs.service.pinmanager.timeout=300000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.service.pinmanager.timeout.unit=MILLISECONDS

(forbidden)nfs.pool.timeout= Use nfs.service.pool.timeout
nfs.service.pool.timeout = 10000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.service.pool.timeout.unit=MILLISECONDS

nfs.service.gplazma=${dcache.service.gplazma}
(forbidden)nfs.gplazma.timeout = Use nfs.service.gplazma.timeout
nfs.service.gplazma.timeout = 3000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.service.gplazma.timeout.unit=MILLISECONDS

nfs.service.pnfsmanager=${dcache.service.pnfsmanager}
nfs.service.billing=${dcache.service.billing}

#
# Database related settings reserved for internal use.
#
(immutable)nfs.db.host=${chimera.db.host}
(immutable)nfs.db.name=${chimera.db.name}
(immutable)nfs.db.user=${chimera.db.user}
(immutable)nfs.db.password=${chimera.db.password}
(immutable)nfs.db.password.file=${chimera.db.password.file}
(immutable)nfs.db.dialect=${chimera.db.dialect}
(immutable)nfs.db.url=${chimera.db.url}
(immutable)nfs.db.schema.changelog=${chimera.db.schema.changelog}
nfs.db.schema.auto=false

#
#  The maximum number of concurrent database connections.
#
nfs.db.connections.max = 30

#
#  The minimum number of idle database connections.
#
nfs.db.connections.idle = 1

#
#  Document which TCP ports are opened
#
(immutable)nfs.net.ports.tcp=(111) ${nfs.net.port}
(immutable)nfs.net.ports.udp=(111) ${nfs.net.port}

# attribute and lookup caching
#
# The properties are applied to two otherwise independent caches: the attribute and lookup caches.
#
# Lookup caching saves the translation from a path to a PNFS-ID and attribute caching saves the
# basic metadata of a file or directory (ownership, permissions, size, etc).
#
# That cached values will be released if memory becomes tight but, as the order of object
# recycling isn't guaranteed, it's best to avoid caching too many objects.
#
# Each cached entry takes 120 bytes of additional memory
nfs.namespace-cache.time = 3
nfs.namespace-cache.time.unit = SECONDS
nfs.namespace-cache.size = 0


#  -----------------------------------------------------------------------
#     Default values for xrootd
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

#  ---- Cell name of Xrootd door
#
xrootd.cell.name=Xrootd-${host.name}

#  ---- Named queues to subscribe to
#
#   A service can consume messages from named queues. Other service can
#   write messages to such queues. A named queue has an unqualified cell
#   address, that is, an address without a domain name.
#
#   This property contains a comma separated list of named queues to
#   consume from.
#
xrootd.cell.consume = ${xrootd.cell.name}
xrootd.cell.subscribe=${xrootd.loginbroker.request-topic},${xrootd.pool-monitor.topic},${xrootd.topic.upload-cancelled}

#  ---- TCP address and port to bind to
#
#   Specifies the TCP port and address on which the Xrootd door accepts connections.
#
xrootd.net.port = 1094
xrootd.net.listen = ${dcache.net.listen}

#  ---- TCP backlog used by xrootd
#
#   1024 is typically the largest value allowed by the OS.
#
xrootd.net.backlog = 1024

#  ---- Worker thread limit
#
#   Maximum number of work threads used by the door. Since the worker
#   threads block on name space and pool manager operations, a
#   relatively large value is needed.
#
xrootd.limits.threads = 1000

# Whether space reservations are supported
(one-of?true|false|${dcache.enable.space-reservation})xrootd.enable.space-reservation=${dcache.enable.space-reservation}

# Cell address of poolmanager service
xrootd.service.poolmanager=${xrootd.service.poolmanager-space-${xrootd.enable.space-reservation}}
(immutable)xrootd.service.poolmanager-space-false=${dcache.service.poolmanager}
(immutable)xrootd.service.poolmanager-space-true=${dcache.service.spacemanager}

# Timeout for poolmanager requests
xrootd.service.poolmanager.timeout = 5400000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)xrootd.service.poolmanager.timeout.unit=MILLISECONDS

# Cell address of pnfsmanager service
xrootd.service.pnfsmanager=${dcache.service.pnfsmanager}

# Cell address of gplazma service
xrootd.service.gplazma=${dcache.service.gplazma}

# Timeout for gplazma requests
xrootd.service.gplazma.timeout=30
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)xrootd.service.gplazma.timeout.unit=SECONDS

# Cell address of billing service
xrootd.service.billing=${dcache.service.billing}

# Timeout for pool communication
xrootd.service.pool.timeout = 15000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)xrootd.service.pool.timeout.unit=MILLISECONDS

#  Topic on which to receive upload cancellations
xrootd.topic.upload-cancelled = ${dcache.topic.upload-cancelled}

# Information for loginbroker registration
xrootd.loginbroker.update-topic=${dcache.loginbroker.update-topic}
xrootd.loginbroker.request-topic=${dcache.loginbroker.request-topic}
xrootd.loginbroker.tags=${dcache.loginbroker.tags}
xrootd.loginbroker.update-period=${dcache.loginbroker.update-period}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS|${dcache.loginbroker.update-period.unit})\
  xrootd.loginbroker.update-period.unit=${dcache.loginbroker.update-period.unit}
xrootd.loginbroker.update-threshold=${dcache.loginbroker.update-threshold}
xrootd.loginbroker.version=2.4
xrootd.loginbroker.family=root
xrootd.loginbroker.root = ${xrootd.root}
xrootd.loginbroker.address = ${xrootd.net.listen}
xrootd.loginbroker.port = ${xrootd.net.port}

# Topic on which to expect pool monitor updates
xrootd.pool-monitor.topic = ${dcache.pool-monitor.topic}

#  ---- Root path of Xrootd door
#
#   Specifies the root directory exposed through the Xrootd door.
#
xrootd.root = ${dcache.root}

#  ---- Allowed paths
#
#   These parameters are set to the absolute paths of directories
#   accessible through Xrootd. Multiple directories are separated by a
#   colon. Different directories may be specified for reads and
#   writes. An empty list will disallow access to all directories.
#
xrootd.authz.read-paths = /
xrootd.authz.write-paths =

#  ---- Xrootd plugins
#
#   Comma separated list of plugins to inject into the xrootd
#   request processing chain.
#
#   dCache ships with a few plugins:
#
#    gplazma:none - no authentication is performed; user identity is
#                   set to ${xrootd.authz.user} (door only).
#
#    gplazma:gsi  - any xrootd request to the door will use a key-exchange
#                   process to identify the end-user (door only).
#
#    authz:alice-token - ALICE token based authorization plugin.
#
#    access-log - generates a dCache style access log using the NetLogger
#                 format.
#
#   A gplazma:* authentication plugin is required; use
#   gplazma:none if no authentication is desired. Authorization plugins
#   have to be placed after the authentication plugin.
#
#   Third party plugins can be used by adding the plugin to the plugin
#   directory of dCache and specifying the plugin name here. Note that
#   third party authentication plugins have to be loaded with
#   gplazma:<plugin>.
#
#   Placement of the access-log is significant, as other plugins may alter
#   the request. To include login events in the access log, the access-log
#   plugin must be placed after the gplazma:* authentication plugin.
#
xrootd.plugins=gplazma:none,access-log,authz:none

#  ---- User identity used for authorizing operations
#
#   As xrootd requests are not authenticated, an identity has to be
#   chosen for authorizing operations. All operations are performed as
#   this identity.
#
#   The authorization controlled by this parameter is different from
#   the authorization performed by the authorization plugin: The
#   authorization plugin validates the requests themselves
#   independently of the file which is accessed. E.g. the token based
#   authorization verifies that the request contains a
#   cryptographically signed token from a trusted source.
#
#   Once the request is authorized it is subject to further
#   authorization by other components in dCache, e.g. PnfsManager or
#   PoolManager. Those authorizations happen wrt. the identity defined
#   by xrootd.authz.user.
#
#   The default is 'nobody', meaning that only world-permissible
#   operations are allowed. Other valid values are 'root' (no further
#   authorization) and a string on the form UID:GID[,GID...], i.e. a
#   numerical UID followed by one or more numerical GIDs. The first
#   GID is the primary one.
#
xrootd.authz.user = nobody

#  ---- Mover queue
#
#   The mover queue on the pool to which this request will be
#   scheduled.
#
xrootd.mover.queue =

#  ---- Mover queue timeout
#
#   Specifies the timeout in milliseconds after which the xrootd door
#   gives up on waiting for a mover to start. This places a bound on
#   the maximum mover queue time.
#
xrootd.mover.timeout = 180000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)xrootd.mover.timeout.unit=MILLISECONDS

#  ----- Custom kXR_Qconfig responses
#
#   xrootd clients may query the server configuration using a kXR_Qconfig request.
#   These key value pairs can be queried. Additional key value pairs may be added as
#   needed, see the xrootd protocol specification at http://xrootd.org/ for details.
#
(prefix)xrootd.query-config = kXR_Qconfig responses
xrootd.query-config!version = dCache ${dcache.version}
xrootd.query-config!sitename = ${dcache.description}
xrootd.query-config!role = none

#  ----- Per-application io-queues
#
#   xrootd protocol allows clients to identify the name of their
#   application.  By default this is the name of the executable (e.g.,
#   xrdcp is "xrdcp") but the xrootd library allows the client to send
#   a different value.  The xrootd.app-ioqueue prefix allows the door
#   to select an io-queue based on this supplied name; the key is the
#   application name and the value is the io-queue name.  For example,
#   with the following definition transfers that involve the xrdcp
#   client will use the "stream" io-queue:
#
#       xrootd.app-ioqueue!xrdcp = stream
#
(prefix)xrootd.app-ioqueue = Per-application io-queue

#
#   Document which TCP ports are opened
#
(immutable)xrootd.net.ports.tcp = ${xrootd.net.port}

# Obsolete properties
(forbidden)xrootd.authz.upload-directory=See gplazma.authz.upload-directory
(obsolete)xrootd.cell.export = See xrootd.cell.consume

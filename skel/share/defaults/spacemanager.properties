#  -----------------------------------------------------------------------
#     Default values for spacemanager
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

#  ---- Cell name of space manager
#
#   This property defines the cell name of the space manager service.
#
spacemanager.cell.name=SrmSpaceManager

#  ---- Whether to export the spacemanager as a well known cell
#
#  This property controls whether the spacemanager cell is published as
#  a well known cell. Well known cells are addressable through their
#  cell name, while other cells are only addressable from other domains
#  using their fully qualified cell address.
(one-of?true|false)spacemanager.cell.export=true

# ---- Allow uploads to link groups outside of space reservation
#
#   If set to false, uploads using links in a link group are only possible by
#   creating a space reservation and either bind the space token to a directory
#   through the writeToken tag, or to explicitly upload to that space reservation
#   with SRM. Other uploads will be served with links not in any link group.
#
#   If set to true, uploads that are not bound to any particular space
#   reservation can still be served by links in a link group if the
#   user is authorized to reserve space in the link group.
#
(forbidden)SpaceManagerReserveSpaceForNonSRMTransfers = Use spacemanager.enable.unreserved-uploads-to-linkgroups
(forbidden)spacemanager.enable.reserve-space-for-non-srm-tranfers = Use spacemanager.enable.unreserved-uploads-to-linkgroups
(forbidden)spacemanager.enable.reserve-space-for-non-srm-transfers = Use spacemanager.enable.unreserved-uploads-to-linkgroups
(one-of?true|false)spacemanager.enable.unreserved-uploads-to-linkgroups = false

# ---- Location of LinkGroupAuthorizationFile
#
#   The LinkGroupAuthorizationFileName file contains the list of VOMS
#   FQANs that are allowed to make space reservations within a given
#   link group.
#
(forbidden)SpaceManagerLinkGroupAuthorizationFileName = Use spacemanager.authz.link-group-file-name
spacemanager.authz.link-group-file-name =

spacemanager.link-groups-update.period=3
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)spacemanager.link-groups-update.period.unit=MINUTES

spacemanager.expire-space-reservation.period=3
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)spacemanager.expire-space-reservation.period.unit=MINUTES

# ---- Delay before removing expired or released reservations
#
#   Once a space reservation expires or is released, it has no further influence
#   on space management. It is however kept in the database for awhile to allow
#   the space reservation to be recovered in case it was released by mistake.
#
#   This property controls how long space manager waits after the expiration date
#   before it deletes such reservations permanently. Files in dCache are not
#   deleted by this. Reservations without an expiration date are not automatically
#   deleted. These can be purged manually using the 'purge spaces' command in the
#   space manager admin interface.
spacemanager.perished-space-purge-delay = 30
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)spacemanager.perished-space-purge-delay.unit = DAYS

# Cell address of pnfsmanager service
spacemanager.service.pnfsmanager=${dcache.service.pnfsmanager}
spacemanager.service.pnfsmanager.timeout=300
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)spacemanager.service.pnfsmanager.timeout.unit=SECONDS

# Cell address of poolmanager service
spacemanager.service.poolmanager=${dcache.service.poolmanager}
spacemanager.service.poolmanager.timeout=300
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)spacemanager.service.poolmanager.timeout.unit=SECONDS

# ---- Number of concurrent threads used by space manager
#
# Each thread will likely obtain a connection to the database, meaning the thread limit
# and the database connection limit should be in the same ballpark.
#
spacemanager.limits.threads=30

# ---- Whether space manager is enabled
#
#  If set to false, the spacemanager service will disable itself.
(one-of?true|false)spacemanager.enable.space-reservation=${dcache.enable.space-reservation}

# Host name of space manager database
spacemanager.db.host=localhost

# Database name of space manager database
spacemanager.db.name=dcache

# Account name used to access space manager database
spacemanager.db.user=srmdcache

# Account password used to access space manager database
spacemanager.db.password=srmdcache

# ---- Database password file
spacemanager.db.password.file=

# JDBC URL used to access space manager database
spacemanager.db.url=jdbc:postgresql://${spacemanager.db.host}/${spacemanager.db.name}

#
# The maximum number of concurrent database connections.
#
spacemanager.db.connections.max=30

#
# The minimum number of idle database connections.
#
spacemanager.db.connections.idle = 1


#  ---- Whether to manage the database schema automatically during startup
#
# If set to 'false' then the "dcache database update" command must be used to
# check if database schema needs to be updated and apply any necessary changes.
spacemanager.db.schema.auto=${dcache.db.schema.auto}

# Liquibase schema definition
spacemanager.db.schema.changelog=diskCacheV111/services/space/db/spacemanager.changelog-master.xml


(obsolete)DefaultAccessLatencyForSpaceReservation = No longer used
(obsolete)spacemanager.default-access-latency = No longer used
(obsolete)spacemanager.default-retention-policy = No longer used
(forbidden)srmSpaceManagerEnabled = Use dcache.enable.space-reservation
